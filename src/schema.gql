# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Flavor {
  id: ID!
  name: String!
  coffees: [Coffee!]!
  createdAt: Date
}

"""Coffee Model"""
type Coffee implements Drink {
  name: String!
  id: ID!
  brand: String!
  flavors: [Flavor!]!
  createdAt: Date
}

interface Drink {
  name: String!
}

"""Tea"""
type Tea implements Drink {
  name: String!
  brand: String!
  weight: Float!
}

"""Date custom scalar type"""
scalar Date

type Query {
  """return All Coffees"""
  coffees: [Coffee!]!

  """return One Coffee"""
  coffee(id: ID!): Coffee

  """return all teas"""
  teas: [Tea!]!

  """return one tea"""
  tea: Tea!

  """Get all drinks"""
  drinks: [DrinkResult!]!
}

"""union type for Coffee and Tea"""
union DrinkResult = Coffee | Tea

type Mutation {
  createCoffee(createCoffeeInput: CreateCoffeeInput!): Coffee!
  updateCoffee(id: Float!, updateCoffeeInput: UpdateCoffeeInput!): Coffee!
  deleteCoffee(id: Float!): Coffee!
}

"""Create Coffee Input type object"""
input CreateCoffeeInput {
  """Coffee name"""
  name: String!

  """Coffee brand"""
  brand: String!

  """Coffee flavors"""
  flavors: [String!]!
}

"""update Coffee Input type object"""
input UpdateCoffeeInput {
  """Coffee name"""
  name: String

  """Coffee brand"""
  brand: String

  """Coffee flavors"""
  flavors: [String!]
}